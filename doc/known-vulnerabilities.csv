DependencyName,DependencyPath,Description,License,Md5,Sha1,Identifiers,CPE,CVE,CWE,Vulnerability,Source,CVSSv2_Severity,CVSSv2_Score,CVSSv2,CVSSv3_BaseSeverity,CVSSv3_BaseScore,CVSSv3,CPE Confidence,Evidence Count
commons-io-2.6.jar,/home/runner/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar,"The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more.",https://www.apache.org/licenses/LICENSE-2.0.txt,467c2a1f64319c99b5faf03fc78572af,815893df5f31da2ece4040fe0a12fd44b577afaf,pkg:maven/commons-io/commons-io@2.6,cpe:2.3:a:apache:commons_io:2.6:*:*:*:*:*:*:*,CVE-2021-29425,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like ""//../foo"", or ""\\..\foo"", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus ""limited"" path traversal), if the calling code would use the result to construct a path value.",NVD,MEDIUM,5.8,/AV:N/AC:M/Au:N/C:P/I:P/A:N,MEDIUM,4.8,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N,HIGH,118
netty-transport-4.1.51.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.51.Final/netty-transport-4.1.51.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,http://www.apache.org/licenses/LICENSE-2.0,9e41494beaea8e75ffd207e6fb97e600,dbbe2d21879ceb82e7b44cd505aba83b752001a4,pkg:maven/io.netty/netty-transport@4.1.51.Final,cpe:2.3:a:netty:netty:4.1.51:*:*:*:*:*:*:*,CVE-2021-21290,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Incorrect Permissions","Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method ""File.createTempFile"" on unix-like systems creates a random file, but, by default will create this file with the permissions ""-rw-r--r--"". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's ""AbstractDiskHttpData"" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own ""java.io.tmpdir"" when you start the JVM or use ""DefaultHttpDataFactory.setBaseDir(...)"" to set the directory to something that is only readable by the current user.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,HIGH,31
netty-transport-4.1.51.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.51.Final/netty-transport-4.1.51.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,http://www.apache.org/licenses/LICENSE-2.0,9e41494beaea8e75ffd207e6fb97e600,dbbe2d21879ceb82e7b44cd505aba83b752001a4,pkg:maven/io.netty/netty-transport@4.1.51.Final,cpe:2.3:a:netty:netty:4.1.51:*:*:*:*:*:*:*,CVE-2021-21295,CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling'),"Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.",NVD,LOW,2.6,/AV:N/AC:H/Au:N/C:N/I:P/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,31
netty-transport-4.1.51.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.51.Final/netty-transport-4.1.51.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,http://www.apache.org/licenses/LICENSE-2.0,9e41494beaea8e75ffd207e6fb97e600,dbbe2d21879ceb82e7b44cd505aba83b752001a4,pkg:maven/io.netty/netty-transport@4.1.51.Final,cpe:2.3:a:netty:netty:4.1.51:*:*:*:*:*:*:*,CVE-2021-21409,CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling'),"Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N,HIGH,31
netty-transport-4.1.51.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.51.Final/netty-transport-4.1.51.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,http://www.apache.org/licenses/LICENSE-2.0,9e41494beaea8e75ffd207e6fb97e600,dbbe2d21879ceb82e7b44cd505aba83b752001a4,pkg:maven/io.netty/netty-transport@4.1.51.Final,cpe:2.3:a:netty:netty:4.1.51:*:*:*:*:*:*:*,CVE-2021-37136,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,31
netty-transport-4.1.51.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.51.Final/netty-transport-4.1.51.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,http://www.apache.org/licenses/LICENSE-2.0,9e41494beaea8e75ffd207e6fb97e600,dbbe2d21879ceb82e7b44cd505aba83b752001a4,pkg:maven/io.netty/netty-transport@4.1.51.Final,cpe:2.3:a:netty:netty:4.1.51:*:*:*:*:*:*:*,CVE-2021-37137,CWE-400 Uncontrolled Resource Consumption ('Resource Exhaustion'),The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,31
netty-transport-4.1.51.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.51.Final/netty-transport-4.1.51.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,http://www.apache.org/licenses/LICENSE-2.0,9e41494beaea8e75ffd207e6fb97e600,dbbe2d21879ceb82e7b44cd505aba83b752001a4,pkg:maven/io.netty/netty-transport@4.1.51.Final,cpe:2.3:a:netty:netty:4.1.51:*:*:*:*:*:*:*,CVE-2021-43797,CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling'),"Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to ""sanitize"" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N,HIGH,31
